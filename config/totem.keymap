//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define Base        0
#define Num         1
#define Sym         2
#define Mac         3

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base";
            bindings = <
         &kp Q  &kp W  &kp E          &kp R  &kp T        &kp Y       &kp U  &kp I         &kp O    &kp P
         &kp A  &kp S  &kp D          &kp F  &kp G        &kp H       &kp J  &kp K         &kp L    &kp BSPC
&kp TAB  &kp Z  &kp X  &kp C          &kp V  &kp B        &kp N       &kp M  &kp COMMA     &kp DOT  &kp SLASH  &kp ESC
                       &mt LCTRL TAB  &mo 1  &kp SPACE    &kp RSHIFT  &mo 2  &mt RGUI ESC
            >;
        };

        Num {
            display-name = "Nav";
            bindings = <
                 &kp N1  &kp N2      &kp N3      &kp N4      &kp N5           &kp N6    &kp N7    &kp N8  &kp N9     &kp N0
                 &trans  &kp LC(N1)  &kp LC(N2)  &kp LC(N3)  &kp LC(B)        &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
&kp LA(LS(TAB))  &trans  &kp LA(N1)  &kp LA(N2)  &kp LA(N3)  &kp LC(GRAVE)    &trans    &trans    &trans  &trans     &trans  &kp LA(TAB)
                                     &trans      &trans      &trans           &trans    &trans    &trans
            >;
        };

        Sym {
            display-name = "Sym";
            bindings = <
            &kp F1   &kp F2   &kp F3  &kp F4  &kp F5        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp MINUS  &kp EQUAL  &kp BSLH
            &kp F6   &kp F7   &kp F8  &kp F9  &kp F10       &trans            &kp GRAVE          &kp SEMI   &kp SQT    &kp ENTER
&kp LSHIFT  &kp F11  &kp F12  &trans  &trans  &trans        &trans            &trans             &kp COMMA  &kp DOT    &kp SLASH  &kp RSHIFT
                              &trans  &trans  &kp LSHIFT    &trans            &trans             &trans
            >;
        };

        Mac {
            display-name = "Fun";
            bindings = <
               &trans  &trans     &trans    &trans    &kp K_MUTE    &kp K_VOL_UP       &trans    &trans    &trans     &trans
               &trans  &kp LCTRL  &kp LALT  &kp LGUI  &trans        &kp K_VOLUME_DOWN  &kp RGUI  &kp RALT  &kp RCTRL  &trans
&kp PAGE_DOWN  &trans  &trans     &trans    &trans    &trans        &trans             &trans    &trans    &trans     &trans  &kp PAGE_UP
                                  &trans    &trans    &trans        &trans             &trans    &trans
            >;
        };

        layer_4 {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
